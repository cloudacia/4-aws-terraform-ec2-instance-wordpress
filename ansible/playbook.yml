---
- hosts: all
  become: yes
  gather_facts: yes
  vars_files:
    - vars/default.yml
  tasks:

  ##################################################
  #                                                #
  #   Apache Web Server installation               #
  #                                                #
  ##################################################

  - name: Install Apache Web Server
    yum:
      name: httpd
      state: latest
  - name: Enables httpd service to start on boot up
    service:
      name: httpd
      state: started

 ##################################################
 #                                                #
 #   MariaDB database installation                #
 #                                                #
 ##################################################

  - name: Install MariaDb server
    yum:
      name: mariadb-server
      state: present
  - name: Enable mariadb service to start on boot up
    service:
      name: mariadb
      state: started
      enabled: true

  ##################################################
  #                                                #
  #   Python MySQL libraries installation need by  #
  #   Ansible                                      #
  ##################################################

  - name: Install Python MySQL support libraries
    yum:
      name: MySQL-python
      state: latest
  ##################################################
  #                                                #
  #   MySQL database configuration                 #
  #                                                #
  ##################################################

  - name: Set the root password
    mysql_user:
      name: root
      password: "{{ mysql_root_password }}"
      login_user: "{{ mysql_login_user }}"
      login_password: "{{ mysql_root_password }}"
      check_implicit_admin: yes
      priv: "{{ mysql_wp_user_privileges }}"
  - name: Remove user test from MariaDB
    mysql_db:
      name: test
      state: absent
      login_user: "{{ mysql_login_user }}"
      login_password: "{{ mysql_root_password }}"
  - name: Remove all anonymous user accounts from MariaDB
    mysql_user:
      name: ''
      host_all: yes
      state: absent
      login_user: "{{ mysql_login_user }}"
      login_password: "{{ mysql_root_password }}"
  - name: Remove the MySQL test database
    mysql_db:
      name: test
      state: absent
      login_user: "{{ mysql_login_user }}"
      login_password: "{{ mysql_root_password }}"
  - name: Create wordpress user account Mariadb
    mysql_user:
      name: "{{ mysql_wp_db_user }}"
      password: "{{ mysql_wp_db_password }}"
      priv: "{{ mysql_wp_user_privileges }}"
      host: '%localhost'
      state: present
      login_user: "{{ mysql_login_user }}"
      login_password: "{{ mysql_root_password }}"
  - name: Create a new database with name 'wordpress'
    community.mysql.mysql_db:
      name: "{{ mysql_wp_db_name }}"
      state: present
      login_user: "{{ mysql_login_user }}"
      login_password: "{{ mysql_root_password }}"

  ##################################################
  #                                                #
  #   PHP 7.4 nstallation                          #
  #                                                #
  ##################################################

  - name: Install Remi Repository
    yum:
      name: "{{ php_remi_repo }}"
      state: present
  - name: Install PHP packages and libraries
    yum:
      name:  "{{ item }}"
      state: present
    loop: "{{ php_modules }}"
  - name: Create a symbolic link
    file:
      src: "{{ php_src }}"
      dest: "{{ php_dest }}"
      owner: root
      group: root
      state: link
      force: yes

  ##################################################
  #                                                #
  #   Wordpress installation                       #
  #                                                #
  ##################################################

  - name: Download Wordpress latest version
    get_url:
      url: "{{ wp_url_site }}"
      dest: "{{ wp_dest_path }}"
      mode: "{{ wp_dir_mode }}"
  - name: Extract wordpress.tar.gz into /var/www/html
    unarchive:
      src: "{{ wp_file_src }}"
      dest: "{{ wp_file_dest }}"
      owner: "{{ wp_dir_owner }}"
      group: "{{ wp_dir_group }}"
      remote_src: yes
  - name: Write the Wordpress configuration file
    template:
      src: "{{ wp_conf_template_file_src }}"
      dest: "{{ wp_conf_template_file_dest }}"
    notify:
      - Restart apache service
  - name: Write the Apache configuration file
    template:
      src: "{{ apache_conf_template_file_src }}"
      dest: "{{ apache_conf_template_file_dest }}"
    notify:
    - Restart apache service
  - name: Flush handlers
    meta: flush_handlers

##################################################
#                                                #
#   Wordpress CLI installation                   #
#                                                #
##################################################

  - name: Downlading WP CLI
    shell:
      chdir: "{{ working_dir }}"
      cmd: curl -O "{{ wp_cli_url }}"
  - name: Making wp-cli.phar executable
    shell:
      chdir: "{{ working_dir }}"
      cmd: chmod +x wp-cli.phar
  - name: Moving wp-cli.phar to "{{ wp_cli_bin_path }}"
    shell:
      chdir: "{{ working_dir }}"
      cmd: sudo mv wp-cli.phar "{{ wp_cli_bin_path }}"

  ##################################################
  #                                                #
  #   Wordpress CLI settings                       #
  #                                                #
  ##################################################

  - name: Setting up Wordpress
    shell:
      chdir: "{{ working_dir }}"
      cmd: /usr/local/bin/wp core install --url="{{ wp_url }}" --title="{{ wp_title }}" --admin_user="{{ wp_admin_user }}" --admin_password="{{ wp_admin_password }}" --admin_email="{{ wp_admin_email }}"
    
  ##################################################
  #                                                #
  #   Ansible handlers                             #
  #                                                #
  ##################################################

  handlers:
  - name: Restart apache service
    service:
      name: httpd
      state: restarted
